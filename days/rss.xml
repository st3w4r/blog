<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Day-to-day on Yanaël Barbier</title><link>https://yanael.io/days/</link><description>Recent content in Day-to-day on Yanaël Barbier</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 10 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://yanael.io/days/rss.xml" rel="self" type="application/rss+xml"/><item><title>Learning Machine Learning</title><link>https://yanael.io/days/ml/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><guid>https://yanael.io/days/ml/</guid><description>&lt;p>Machine Learning and Deep Learning are trendy topics and it is a promising area. As a Software Engineer, it&amp;rsquo;s identified as a Data Scientist subject but it sounded so cool that I decided to dig it. Here are my day-to-day notes on this long journey to master the field.&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://yanael.io/days/ml/#2020-03-17">2020-03-17&lt;/a>&lt;br>
&lt;a href="https://yanael.io/days/ml/#2020-03-18">2020-03-18&lt;/a>&lt;br>
&lt;a href="https://yanael.io/days/ml/#2020-03-19">2020-03-19&lt;/a>&lt;br>
&lt;a href="https://yanael.io/days/ml/#2020-03-20">2020-03-20&lt;/a>&lt;br>
&lt;a href="https://yanael.io/days/ml/#2020-03-21">2020-03-21&lt;/a>&lt;br>
&lt;a href="https://yanael.io/days/ml/#2020-03-22">2020-03-22&lt;/a>&lt;br>
&lt;a href="https://yanael.io/days/ml/#2020-03-23">2020-03-23&lt;/a>&lt;br>
&lt;a href="https://yanael.io/days/ml/#2020-03-24">2020-03-24&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="2020-03-17">&lt;a href="https://yanael.io/days/ml/#2020-03-17">2020-03-17&lt;/a>&lt;/h2>
&lt;p>Hello world for CNNs, make a simple network that predicts the MNIST digits&lt;/p>
&lt;p>&lt;a href="https://keras.io/examples/vision/mnist_convnet/">https://keras.io/examples/mnist_cnn/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>check out how the model is built after you compile it with: model.summary()&lt;/li>
&lt;li>try changing a few parameters in the model and check out how it looks now&lt;/li>
&lt;li>when you train the model, change some of the factors like: batch_size, epochs and learning rate&lt;/li>
&lt;li>print out how the data looks for the different pre-processing steps&lt;/li>
&lt;li>Start lesson 1 &lt;a href="http://fast.ai">fast.ai&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-18">&lt;a href="https://yanael.io/days/ml/#2020-03-18">2020-03-18&lt;/a>&lt;/h2>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Continue &lt;a href="https://course19.fast.ai/videos/?lesson=1">lesson 1 fast.ai&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Train model on MNIST dataset&lt;/li>
&lt;/ul>
&lt;p>I have seen how to download a dataset, how to create a DataLoaders and how to train a pre-trained model.&lt;/p>
&lt;p>In the learner, I see different types of layers: Conv2d, BatchNorm2d, ReLU, MaxPool2d, etc.&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What does freeze and unfreeze?&lt;/li>
&lt;li>What&amp;rsquo;s a kernel?&lt;/li>
&lt;li>What&amp;rsquo;s a sequential model?&lt;/li>
&lt;li>What does each layer do?&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-19">&lt;a href="https://yanael.io/days/ml/#2020-03-19">2020-03-19&lt;/a>&lt;/h2>
&lt;p>Try to tweak a model.&lt;br>
Read the documentation, and discover the simple model creation.&lt;br>
The list of definitions: &lt;a href="https://deepai.org/definitions">https://deepai.org/definitions&lt;/a>&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What&amp;rsquo;s a kernel?&lt;br>
Use to map a non-linear problem to a linear methods&lt;/li>
&lt;li>What&amp;rsquo;s the stride?&lt;br>
Modify the amount of movement over the image.
If stride set to 1 the filter will move one pixel or unit at a time.&lt;br>
&lt;a href="https://deepai.org/machine-learning-glossary-and-terms/stride">https://deepai.org/machine-learning-glossary-and-terms/stride&lt;/a>&lt;/li>
&lt;li>What is an epoch? Cycles through all the data&lt;/li>
&lt;li>What are callbacks in the training loop for?
&lt;ul>
&lt;li>Used to tweak the training loop at different stages: after epoch, after loss, before validate, etc&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What&amp;rsquo;s one cycle?
&lt;ul>
&lt;li>&lt;a href="https://fastai1.fast.ai/callbacks.one_cycle.html#The-1cycle-policy">What is 1cycle?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://arxiv.org/pdf/1803.09820.pdf">A disciplined approach to neural network hyper-parameters: Part 1 &amp;ndash; learning rate, batch size, momentum, and weight decay&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What&amp;rsquo;s the learning rate per iterations&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-20">&lt;a href="https://yanael.io/days/ml/#2020-03-20">2020-03-20&lt;/a>&lt;/h2>
&lt;p>Read more documentation about the &lt;a href="https://docs.fast.ai/callback.core.html">callbacks&lt;/a>, the callback makes it easy to add new functionalities to the training loop.&lt;/p>
&lt;p>Read about the learning rate.&lt;/p>
&lt;p>&lt;a href="https://www.jeremyjordan.me/nn-learning-rate/">Setting the learning rate of your neural network&lt;/a>&lt;/p>
&lt;ul>
&lt;li>A small learning rate will require many updates before reaching the minimum point&lt;/li>
&lt;li>Optimal learning rate swiftly reaches the minimum point&lt;/li>
&lt;li>Too large learning rate will cause drastic updates which lead to divergent behaviors&lt;/li>
&lt;/ul>
&lt;p>Test all three phases to discover the optimal learning rate range.&lt;/p>
&lt;p>&lt;a href="https://arxiv.org/abs/1712.09913">Visualizing the Loss Landscape of Neural Nets&lt;/a> (Paper)&lt;/p>
&lt;p>&lt;a href="https://arxiv.org/abs/1506.01186">Cyclical Learning Rates for Training Neural Networks&lt;/a> (Paper)&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What&amp;rsquo;s a hyper-parameter?&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-21">&lt;a href="https://yanael.io/days/ml/#2020-03-21">2020-03-21&lt;/a>&lt;/h2>
&lt;p>I have watched videos of &lt;a href="https://www.youtube.com/playlist?list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi">Three Blue One Brown&lt;/a> about Neural Networks.&lt;/p>
&lt;p>A great method to train a model is the one-cycle method.&lt;/p>
&lt;p>&lt;a href="https://arxiv.org/abs/1803.09820">A disciplined approach to neural network hyper-parameters&lt;/a> (&lt;a href="https://arxiv.org/pdf/1803.09820.pdf">Paper&lt;/a>)&lt;/p>
&lt;p>ReLU (Rectified Linear Unit) is an activation function.&lt;/p>
&lt;p>Question:&lt;/p>
&lt;ul>
&lt;li>How does ReLU work behind the scene?
&lt;a href="https://en.wikipedia.org/wiki/Rectifier_(neural_networks)">Rectifier (neural networks)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Train a model with a custom dataset&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-22">&lt;a href="https://yanael.io/days/ml/#2020-03-22">2020-03-22&lt;/a>&lt;/h2>
&lt;p>I have trained a model with my own dataset. I have to clean up the top losses data, Fastai provides a class to do that. Load the new data and retrain the model.&lt;/p>
&lt;p>I have to export the model, it creates a pickle file &lt;code>.pkl&lt;/code>&lt;/p>
&lt;p>This file contains the model, the weights, metadata like the classes or the transforms&lt;/p>
&lt;p>I have built a small program that takes this file and loads it with Fastai and returns the prediction on custom images.&lt;/p>
&lt;p>Now I have a good idea of how to export a model and run it into production.&lt;/p>
&lt;p>&amp;ldquo;Inference&amp;rdquo; is the name of the prediction process.&lt;/p>
&lt;p>Learning rate too high -&amp;gt; The validation loss will be high&lt;/p>
&lt;p>Learning rate too low the error rate will decrease very slowly between epochs. An indication is the training loss will be higher than the validation loss&lt;/p>
&lt;p>To recognize if a model is starting over fitting is only if the error rate starts to be worth than the previous epochs. Not about training loss lower than validation loss.&lt;/p>
&lt;p>Tensor with 3 dimensions for a colored image.&lt;/p>
&lt;p>Visualize &lt;a href="http://matrixmultiplication.xyz">Matrix Multiplication&lt;/a>&lt;/p>
&lt;p>Acronyms:&lt;/p>
&lt;ul>
&lt;li>SGD: Stochastic Gradient Descent&lt;/li>
&lt;li>MSE: Mean Squared Error&lt;/li>
&lt;/ul>
&lt;p>Learning linear regression and the derivative is useful to understand how loss calculation works.&lt;/p>
&lt;p>To calculate the gradient descent in practice, we use mini-batches instead of calculating the whole batch.&lt;/p>
&lt;p>Vocabulary:&lt;/p>
&lt;ul>
&lt;li>Learning rate&lt;br>
Multiple the gradian by.&lt;/li>
&lt;li>Epoch&lt;br>
One complete run all over the data point (image, &amp;hellip;)&lt;br>
E.g. if 1K images, mini-batch is 100 it will take 10 iterations to see every image once, for 1 epoch.&lt;br>
Too many times looking at the same image can lead to overfitting.&lt;/li>
&lt;li>Minibatch&lt;br>
Random data points to update the weights.&lt;/li>
&lt;li>SGD&lt;br>
Stochastic Gradient Decent using mini-batches&lt;/li>
&lt;li>Model / Architecture&lt;br>
Functions&lt;/li>
&lt;li>Parameters&lt;br>
Coefficient → Weights&lt;/li>
&lt;li>Loss function&lt;br>
How far away or close you are from the correct answer.&lt;/li>
&lt;/ul>
&lt;p>To sharpen your math understanding&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=q6DGVGJ1WP4">There&amp;rsquo;s no such thing as &amp;ldquo;not a math person&amp;rdquo;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.khanacademy.org/">Khan Academy&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.fast.ai/2017/11/13/validation-sets/">How (and why) to create a good validation set&lt;/a>&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What&amp;rsquo;s gradient?&lt;/li>
&lt;li>What&amp;rsquo;s a tensor?&lt;/li>
&lt;li>How to embed the model into an application?&lt;/li>
&lt;/ul>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Export the model&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Embed the model into a python script to process one image&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-23">&lt;a href="https://yanael.io/days/ml/#2020-03-23">2020-03-23&lt;/a>&lt;/h2>
&lt;p>Today learning about computer vision and image processing.&lt;/p>
&lt;ul>
&lt;li>A black and white image is a bunch of numbers representing the grayscale.&lt;/li>
&lt;li>A colored image has 3 dimensions, named channels represented as a rank 3 tensor.&lt;/li>
&lt;li>3D tensor (red, green, blue)&lt;/li>
&lt;li>A tensor is an array with a regular shape, where every row is the same length and every column is the same length. Mathematically, we always go with number of rows by the number of columns.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Rank:&lt;/strong> How many dimensions are there. Colored image has a rank of 3.&lt;/p>
&lt;p>&lt;a href="https://distill.pub/2020/grand-tour/">Visualize Neural Networks&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://github.com/fastai/numerical-linear-algebra/blob/master/README.md">Computational Linear Algebra for Coders&lt;/a>&lt;/p>
&lt;p>Linear Function:&lt;/p>
&lt;pre>&lt;code>y = ax+b
&lt;/code>&lt;/pre>&lt;pre>&lt;code>x, y are the coordinates of any point on the line
a is the slope of the line
b is the y-intercept (where the line crosses the y-axis)
&lt;/code>&lt;/pre>&lt;h2 id="2020-03-24">&lt;a href="https://yanael.io/days/ml/#2020-03-24">2020-03-24&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://course19.fast.ai/videos/?lesson=2">Fast.ai Lesson 2&lt;/a> at &lt;a href="https://youtu.be/ccMHJeQU4Qw?t=5241">Linear Regression Problem&lt;/a>&lt;/p>
&lt;p>Find the parameters to minimize the error. For a regression problem, the error function a.k.a &lt;strong>loss function&lt;/strong> MSE is a common one.&lt;/p>
&lt;p>Mean Squared Error → MSE, also RMSE → Root Mean Squared Error&lt;/p>
&lt;p>MSE is the loss, the difference between predictions and the actual number.&lt;/p>
&lt;h2 id="next">NeXT&lt;/h2>
&lt;p>To follow the upcoming days:&lt;/p>
&lt;p>&lt;form id="form-subscribe"
action="https://formspree.io/f/mleopdlv"
method="POST"
>
&lt;label>Email:&lt;/label>
&lt;input type="email" name="email" />
&lt;button id="form-subscribe-button">Subscribe&lt;/button>
&lt;p id="form-subscribe-status">&lt;/p>
&lt;/form>
&lt;script>
window.addEventListener("DOMContentLoaded",function(){var form=document.getElementById("form-subscribe");var button=document.getElementById("form-subscribe-button");var status=document.getElementById("form-subscribe-status");function success(){form.reset();button.style="display: none ";status.innerHTML="Thanks!";}
function error(){status.innerHTML="Oops! There was a problem.";}
form.addEventListener("submit",function(ev){ev.preventDefault();var data=new FormData(form);ajax(form.method,form.action,data,success,error);});});function ajax(method,url,data,success,error){var xhr=new XMLHttpRequest();xhr.open(method,url);xhr.setRequestHeader("Accept","application/json");xhr.onreadystatechange=function(){if(xhr.readyState!==XMLHttpRequest.DONE)return;if(xhr.status===200){success(xhr.response,xhr.responseType);}else{error(xhr.status,xhr.response,xhr.responseType);}};xhr.send(data);}
&lt;/script>
&lt;/p></description></item></channel></rss>