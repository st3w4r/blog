<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yanaël Barbier</title><link>https://yanael.io/</link><description>Recent content on Yanaël Barbier</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yanael.io/rss.xml" rel="self" type="application/rss+xml"/><item><title>Hono with Server Sent Events</title><link>https://yanael.io/articles/hono-sse/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://yanael.io/articles/hono-sse/</guid><description>&lt;p>&lt;a href="https://hono.dev/">Hono&lt;/a> is a web framework designed to run on any JavaScript runtime, making it suitable for &lt;a href="https://www.cloudflare.com/learning/serverless/glossary/what-is-edge-computing/">edge deployments&lt;/a>. It can be combined with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events">Server-Sent Events (SSE)&lt;/a> to create real-time web applications with a focus on sending server updates to the client.&lt;/p>
&lt;pre tabindex="0">&lt;code> +--------+ +--------+
| Client |&amp;lt;---&amp;gt;| Server |
+---+----+ +----+---+
| |
| 1. GET /sse |
+--------------&amp;gt;|
| 2. 200 OK |
| (SSE Headers) |
|&amp;lt;--------------+
| 3. Event 1 |
| &amp;#39;data:...&amp;#39; |
|&amp;lt;--------------+
| 4. Event 2 |
| &amp;#39;data:...&amp;#39; |
|&amp;lt;--------------+
... ...
&lt;/code>&lt;/pre>&lt;h2 id="setting-up-sse-with-hono">Setting up SSE with Hono&lt;/h2>
&lt;h3 id="1-setting-headers">1. Setting Headers&lt;/h3>
&lt;p>For SSE to function correctly, specific headers need to be set. By setting them up inside a middleware, we can ensure they&amp;rsquo;re consistently applied.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">use&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/sse/*&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">async&lt;/span> (&lt;span style="color:#a6e22e">c&lt;/span>, &lt;span style="color:#a6e22e">next&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">header&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Content-Type&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;text/event-stream&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">header&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Cache-Control&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;no-cache&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">header&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Connection&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;keep-alive&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">next&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>These headers ensure the client maintains an open connection and receives the streamed events as intended.&lt;/p>
&lt;h3 id="2-sending-data-with-sse-format">2. Sending Data with SSE Format&lt;/h3>
&lt;p>With Hono, we can utilize its streaming feature to start streaming content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/sse&amp;#39;&lt;/span>, (&lt;span style="color:#a6e22e">c&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">stream&lt;/span>(&lt;span style="color:#66d9ef">async&lt;/span> (&lt;span style="color:#a6e22e">stream&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;data: hello\n\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;data: world\n\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-using-custom-event-types">3. Using Custom Event Types&lt;/h3>
&lt;p>Beyond basic data, SSE allows us to send custom event types to handle specific client-side actions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;event: close\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;data: close\n\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-adding-event-ids">4. Adding Event IDs&lt;/h3>
&lt;p>To keep track of events, especially useful for error recovery:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;id: 0\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="5-setting-retry-intervals">5. Setting Retry Intervals&lt;/h3>
&lt;p>In case of a connection drop, instruct the client when to attempt a reconnection:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;retry: 1000\n&amp;#39;&lt;/span>); &lt;span style="color:#75715e">// In milliseconds
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="a-complete-hono-sse-endpoint-example">A Complete Hono-SSE Endpoint Example&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">Hono&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;hono&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">cors&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;hono/cors&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Hono&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">use&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">cors&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">origin&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">allowMethods&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;GET&amp;#39;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">allowHeaders&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;Content-Type&amp;#39;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>, (&lt;span style="color:#a6e22e">c&lt;/span>) =&amp;gt; &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">text&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Hello Hono!&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">use&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/sse/*&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">async&lt;/span> (&lt;span style="color:#a6e22e">c&lt;/span>, &lt;span style="color:#a6e22e">next&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">header&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Content-Type&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;text/event-stream&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">header&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Cache-Control&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;no-cache&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">header&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Connection&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;keep-alive&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">next&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/sse&amp;#39;&lt;/span>, (&lt;span style="color:#a6e22e">c&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">stream&lt;/span>(&lt;span style="color:#66d9ef">async&lt;/span> (&lt;span style="color:#a6e22e">stream&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;retry: 1000\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;id: 0\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;data: hello\n\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;id: 1\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;data: world\n\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;event: close\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;data: close\n\n&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#a6e22e">app&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="client-side-implementation">Client-Side Implementation&lt;/h2>
&lt;p>To use the power of SSE on the client side, a simple listener can be implemented:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">charset&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">title&lt;/span>&amp;gt;SSE Example&amp;lt;/&lt;span style="color:#f92672">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;SSE Example&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sse-data&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">baseURL&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;http://localhost:3000&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">sseData&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;sse-data&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">eventSource&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">EventSource&lt;/span>(&lt;span style="color:#e6db74">`&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">baseURL&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/sse`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">eventSource&lt;/span>.&lt;span style="color:#a6e22e">onmessage&lt;/span> &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#a6e22e">event&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sseData&lt;/span>.&lt;span style="color:#a6e22e">innerHTML&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#a6e22e">event&lt;/span>.&lt;span style="color:#a6e22e">data&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">eventSource&lt;/span>.&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;close&amp;#34;&lt;/span>, (&lt;span style="color:#a6e22e">event&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Received &amp;#34;close&amp;#34; event. Closing connection...&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">eventSource&lt;/span>.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">eventSource&lt;/span>.&lt;span style="color:#a6e22e">onerror&lt;/span> &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#a6e22e">error&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">error&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;EventSource error:&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">error&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Visit the page in your browser, and watch as SSE seamlessly delivers server updates.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Combining Hono with SSE opens doors to real-time, dynamic web applications.&lt;/p>
&lt;p>Consider exploring advanced Hono features and more about SSE:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://hono.dev/">Hono&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events">SSE (Server-Sent Events)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="code">Code&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/st3w4r/hono-sse/">Code on GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>Receive my stream of work on:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://twitter.com/YanaelBarbier">X/Twitter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.threads.net/@yanaelbarbier">Threads&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/st3w4r">GitHub&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Networks</title><link>https://yanael.io/networks/</link><pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate><guid>https://yanael.io/networks/</guid><description>&lt;p>Send me some packets here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://twitter.com/YanaelBarbier">X/Twitter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.threads.net/@yanaelbarbier">Threads&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/st3w4r">GitHub&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linkedin.com/in/yanaelbarbier/?locale=en_US">LinkedIn&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Path</title><link>https://yanael.io/path/</link><pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate><guid>https://yanael.io/path/</guid><description>&lt;p>It’s a small world, so I just want to share some places where I used to live.
export PATH=&lt;/p>
&lt;ul>
&lt;li>London, UK, January 2022 - Present&lt;/li>
&lt;li>Porto, Portugal, 7 months 2021&lt;/li>
&lt;li>Lisbon, Portugal, 7 months 2020 - 2021&lt;/li>
&lt;li>London, UK, 1 year 2019 - 2020&lt;/li>
&lt;li>Cary, North Carolina, USA, 2 months 2019&lt;/li>
&lt;li>Paris, France, 3 years 2017 - 2019&lt;/li>
&lt;li>San Francisco, California, USA, 7 months 2016 - 2017&lt;/li>
&lt;li>Paris, France, 2 years 2014 - 2016&lt;/li>
&lt;li>Barcelona, Spain, 2 months 2014&lt;/li>
&lt;li>Grenoble, France, 2 years 2012-2014&lt;/li>
&lt;li>Tournon-sur-Rhône, Ardèche, France, 3 years 2009 - 2012&lt;/li>
&lt;li>Home sweet home, Ardèche, France 16 years 1993 - 2009&lt;/li>
&lt;/ul></description></item><item><title>Learning Machine Learning</title><link>https://yanael.io/days/ml/</link><pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate><guid>https://yanael.io/days/ml/</guid><description>&lt;p>Machine Learning and Deep Learning are trendy topics and it is a promising area. As a Software Engineer, it&amp;rsquo;s identified as a Data Scientist subject but it sounded so cool that I decided to dig it. Here are my day-to-day notes on this long journey to master the field.&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://yanael.io/days/ml/#2020-03-17">march 2020&lt;/a>&lt;br>
&lt;a href="https://yanael.io/days/ml/#2020-04-01">april 2020&lt;/a>&lt;br>
&lt;a href="https://yanael.io/days/ml/#2020-04-30">latest&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="2020-03-17">&lt;a href="https://yanael.io/days/ml/#2020-03-17">2020-03-17&lt;/a>&lt;/h2>
&lt;p>Hello world for CNNs, make a simple network that predicts the MNIST digits&lt;/p>
&lt;p>&lt;a href="https://keras.io/examples/vision/mnist_convnet/">https://keras.io/examples/mnist_cnn/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>check out how the model is built after you compile it with: model.summary()&lt;/li>
&lt;li>try changing a few parameters in the model and check out how it looks now&lt;/li>
&lt;li>when you train the model, change some of the factors like: batch_size, epochs and learning rate&lt;/li>
&lt;li>print out how the data looks for the different pre-processing steps&lt;/li>
&lt;li>Start lesson 1 &lt;a href="http://fast.ai">fast.ai&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-18">&lt;a href="https://yanael.io/days/ml/#2020-03-18">2020-03-18&lt;/a>&lt;/h2>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Continue &lt;a href="https://course19.fast.ai/videos/?lesson=1">lesson 1 fast.ai&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Train model on MNIST dataset&lt;/li>
&lt;/ul>
&lt;p>I have seen how to download a dataset, how to create a DataLoaders and how to train a pre-trained model.&lt;/p>
&lt;p>In the learner, I see different types of layers: Conv2d, BatchNorm2d, ReLU, MaxPool2d, etc.&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What does freeze and unfreeze?&lt;/li>
&lt;li>What&amp;rsquo;s a kernel?&lt;/li>
&lt;li>What&amp;rsquo;s a sequential model?&lt;/li>
&lt;li>What does each layer do?&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-19">&lt;a href="https://yanael.io/days/ml/#2020-03-19">2020-03-19&lt;/a>&lt;/h2>
&lt;p>Try to tweak a model.&lt;br>
Read the documentation, and discover the simple model creation.&lt;br>
The list of definitions: &lt;a href="https://deepai.org/definitions">https://deepai.org/definitions&lt;/a>&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What&amp;rsquo;s a kernel?&lt;br>
Use to map a non-linear problem to a linear methods&lt;/li>
&lt;li>What&amp;rsquo;s the stride?&lt;br>
Modify the amount of movement over the image.
If stride set to 1 the filter will move one pixel or unit at a time.&lt;br>
&lt;a href="https://deepai.org/machine-learning-glossary-and-terms/stride">https://deepai.org/machine-learning-glossary-and-terms/stride&lt;/a>&lt;/li>
&lt;li>What is an epoch? Cycles through all the data&lt;/li>
&lt;li>What are callbacks in the training loop for?
&lt;ul>
&lt;li>Used to tweak the training loop at different stages: after epoch, after loss, before validate, etc&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What&amp;rsquo;s one cycle?
&lt;ul>
&lt;li>&lt;a href="https://fastai1.fast.ai/callbacks.one_cycle.html#The-1cycle-policy">What is 1cycle?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://arxiv.org/pdf/1803.09820.pdf">A disciplined approach to neural network hyper-parameters: Part 1 &amp;ndash; learning rate, batch size, momentum, and weight decay&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What&amp;rsquo;s the learning rate per iterations&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-20">&lt;a href="https://yanael.io/days/ml/#2020-03-20">2020-03-20&lt;/a>&lt;/h2>
&lt;p>Read more documentation about the &lt;a href="https://docs.fast.ai/callback.core.html">callbacks&lt;/a>, the callback makes it easy to add new functionalities to the training loop.&lt;/p>
&lt;p>Read about the learning rate.&lt;/p>
&lt;p>&lt;a href="https://www.jeremyjordan.me/nn-learning-rate/">Setting the learning rate of your neural network&lt;/a>&lt;/p>
&lt;ul>
&lt;li>A small learning rate will require many updates before reaching the minimum point&lt;/li>
&lt;li>Optimal learning rate swiftly reaches the minimum point&lt;/li>
&lt;li>Too large learning rate will cause drastic updates which lead to divergent behaviors&lt;/li>
&lt;/ul>
&lt;p>Test all three phases to discover the optimal learning rate range.&lt;/p>
&lt;p>&lt;a href="https://arxiv.org/abs/1712.09913">Visualizing the Loss Landscape of Neural Nets&lt;/a> (Paper)&lt;/p>
&lt;p>&lt;a href="https://arxiv.org/abs/1506.01186">Cyclical Learning Rates for Training Neural Networks&lt;/a> (Paper)&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What&amp;rsquo;s a hyper-parameter?&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-21">&lt;a href="https://yanael.io/days/ml/#2020-03-21">2020-03-21&lt;/a>&lt;/h2>
&lt;p>I have watched videos of &lt;a href="https://www.youtube.com/playlist?list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi">Three Blue One Brown&lt;/a> about Neural Networks.&lt;/p>
&lt;p>A great method to train a model is the one-cycle method.&lt;/p>
&lt;p>&lt;a href="https://arxiv.org/abs/1803.09820">A disciplined approach to neural network hyper-parameters&lt;/a> (&lt;a href="https://arxiv.org/pdf/1803.09820.pdf">Paper&lt;/a>)&lt;/p>
&lt;p>ReLU (Rectified Linear Unit) is an activation function.&lt;/p>
&lt;p>Question:&lt;/p>
&lt;ul>
&lt;li>How does ReLU work behind the scene?
&lt;a href="https://en.wikipedia.org/wiki/Rectifier_(neural_networks)">Rectifier (neural networks)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Train a model with a custom dataset&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-22">&lt;a href="https://yanael.io/days/ml/#2020-03-22">2020-03-22&lt;/a>&lt;/h2>
&lt;p>I have trained a model with my own dataset. I have to clean up the top losses data, Fastai provides a class to do that. Load the new data and retrain the model.&lt;/p>
&lt;p>I have to export the model, it creates a pickle file &lt;code>.pkl&lt;/code>&lt;/p>
&lt;p>This file contains the model, the weights, metadata like the classes or the transforms&lt;/p>
&lt;p>I have built a small program that takes this file and loads it with Fastai and returns the prediction on custom images.&lt;/p>
&lt;p>Now I have a good idea of how to export a model and run it into production.&lt;/p>
&lt;p>&amp;ldquo;Inference&amp;rdquo; is the name of the prediction process.&lt;/p>
&lt;p>Learning rate too high -&amp;gt; The validation loss will be high&lt;/p>
&lt;p>Learning rate too low the error rate will decrease very slowly between epochs. An indication is the training loss will be higher than the validation loss&lt;/p>
&lt;p>To recognize if a model is starting over fitting is only if the error rate starts to be worth than the previous epochs. Not about training loss lower than validation loss.&lt;/p>
&lt;p>Tensor with 3 dimensions for a colored image.&lt;/p>
&lt;p>Visualize &lt;a href="http://matrixmultiplication.xyz">Matrix Multiplication&lt;/a>&lt;/p>
&lt;p>Acronyms:&lt;/p>
&lt;ul>
&lt;li>SGD: Stochastic Gradient Descent&lt;/li>
&lt;li>MSE: Mean Squared Error&lt;/li>
&lt;/ul>
&lt;p>Learning linear regression and the derivative is useful to understand how loss calculation works.&lt;/p>
&lt;p>To calculate the gradient descent in practice, we use mini-batches instead of calculating the whole batch.&lt;/p>
&lt;p>Vocabulary:&lt;/p>
&lt;ul>
&lt;li>Learning rate&lt;br>
Multiple the gradian by.&lt;/li>
&lt;li>Epoch&lt;br>
One complete run all over the data point (image, &amp;hellip;)&lt;br>
E.g. if 1K images, mini-batch is 100 it will take 10 iterations to see every image once, for 1 epoch.&lt;br>
Too many times looking at the same image can lead to overfitting.&lt;/li>
&lt;li>Minibatch&lt;br>
Random data points to update the weights.&lt;/li>
&lt;li>SGD&lt;br>
Stochastic Gradient Decent using mini-batches&lt;/li>
&lt;li>Model / Architecture&lt;br>
Functions&lt;/li>
&lt;li>Parameters&lt;br>
Coefficient → Weights&lt;/li>
&lt;li>Loss function&lt;br>
How far away or close you are from the correct answer.&lt;/li>
&lt;/ul>
&lt;p>To sharpen your math understanding&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=q6DGVGJ1WP4">There&amp;rsquo;s no such thing as &amp;ldquo;not a math person&amp;rdquo;&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.khanacademy.org/">Khan Academy&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.fast.ai/2017/11/13/validation-sets/">How (and why) to create a good validation set&lt;/a>&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What&amp;rsquo;s gradient?&lt;/li>
&lt;li>What&amp;rsquo;s a tensor?&lt;/li>
&lt;li>How to embed the model into an application?&lt;/li>
&lt;/ul>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Export the model&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Embed the model into a python script to process one image&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-23">&lt;a href="https://yanael.io/days/ml/#2020-03-23">2020-03-23&lt;/a>&lt;/h2>
&lt;p>Today learning about computer vision and image processing.&lt;/p>
&lt;ul>
&lt;li>A black and white image is a bunch of numbers representing the grayscale.&lt;/li>
&lt;li>A colored image has 3 dimensions, named channels represented as a rank 3 tensor.&lt;/li>
&lt;li>3D tensor (red, green, blue)&lt;/li>
&lt;li>A tensor is an array with a regular shape, where every row is the same length and every column is the same length. Mathematically, we always go with number of rows by the number of columns.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Rank:&lt;/strong> How many dimensions are there. Colored image has a rank of 3.&lt;/p>
&lt;p>&lt;a href="https://distill.pub/2020/grand-tour/">Visualize Neural Networks&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://github.com/fastai/numerical-linear-algebra/blob/master/README.md">Computational Linear Algebra for Coders&lt;/a>&lt;/p>
&lt;p>Linear Function:&lt;/p>
&lt;pre tabindex="0">&lt;code>y = ax+b
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>x, y are the coordinates of any point on the line
a is the slope of the line
b is the y-intercept (where the line crosses the y-axis)
&lt;/code>&lt;/pre>&lt;h2 id="2020-03-24">&lt;a href="https://yanael.io/days/ml/#2020-03-24">2020-03-24&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://course19.fast.ai/videos/?lesson=2">Fast.ai Lesson 2&lt;/a> at &lt;a href="https://youtu.be/ccMHJeQU4Qw?t=5241">Linear Regression Problem&lt;/a>&lt;/p>
&lt;p>Find the parameters to minimize the error. For a regression problem, the error function a.k.a &lt;strong>loss function&lt;/strong> MSE is a common one.&lt;/p>
&lt;p>Mean Squared Error → MSE, also RMSE → Root Mean Squared Error&lt;/p>
&lt;p>MSE is the loss, the difference between predictions and the actual number.&lt;/p>
&lt;h2 id="2020-03-25">&lt;a href="https://yanael.io/days/ml/#2020-03-25">2020-03-25&lt;/a>&lt;/h2>
&lt;p>Continue the calculation of the SGD.&lt;/p>
&lt;p>Create mini batch to don&amp;rsquo;t train on the whole dataset each time before updating the weights.&lt;/p>
&lt;h2 id="2020-03-26">&lt;a href="https://yanael.io/days/ml/#2020-03-26">2020-03-26&lt;/a>&lt;/h2>
&lt;p>Starting &lt;a href="https://course19.fast.ai/videos/?lesson=3">lesson 3&lt;/a> about data blocks, multi-label, classification, and segmentation.&lt;/p>
&lt;p>&lt;code>thresh&lt;/code> is used in case we have multiple labels.&lt;/p>
&lt;p>Python &lt;code>partial&lt;/code> is used to create a function with a specific parameter.&lt;/p>
&lt;p>Use small images to experiment more quicker.&lt;/p>
&lt;p>Segmentation creates a labialization pixel per pixel.&lt;/p>
&lt;ul>
&lt;li>Difference between online and offline ML
&lt;ul>
&lt;li>Offline: Static dataset&lt;/li>
&lt;li>Online: Continuously train when the data comes in. a.k.a incremental learning&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-27">&lt;a href="https://yanael.io/days/ml/#2020-03-27">2020-03-27&lt;/a>&lt;/h2>
&lt;p>Using progressive resizing to train the model.&lt;/p>
&lt;p>If underfitting, train longer, train last part reduce learning rate, decrease regularization.&lt;/p>
&lt;p>U-Net for segmentation training&lt;/p>
&lt;p>Learning rate should be high at the begging and reduce after. Don&amp;rsquo;t be locked in to find the smallest.&lt;/p>
&lt;p>After each linear regression use an activation function.&lt;br>
The sigmoid is not used anymore.&lt;br>
Mostly used now:&lt;br>
ReLU: Rectified Linear Unit → ReLU activation&lt;br>
&lt;code>max(x,0)&lt;/code>&lt;/p>
&lt;p>&lt;a href="http://neuralnetworksanddeeplearning.com/chap4.html">A visual proof that neural nets can compute any function&lt;/a>&lt;br>
&lt;a href="https://towardsdatascience.com/activation-functions-neural-networks-1cbd9f8d91d6">Activation Functions in Neural Networks&lt;/a>&lt;/p>
&lt;p>Imagenet expect 3 channels, if we have only 2 channels we can create a new channel set as 0.&lt;/p>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>Practice data block API&lt;/li>
&lt;li>Multi label classification&lt;/li>
&lt;li>Segmentation&lt;/li>
&lt;li>NLP classification&lt;/li>
&lt;li>Implement MSE&lt;/li>
&lt;li>Practice ReLU&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-29">&lt;a href="https://yanael.io/days/ml/#2020-03-29">2020-03-29&lt;/a>&lt;/h2>
&lt;p>Watched the videos of &lt;a href="https://www.youtube.com/watch?v=fNk_zzaMoSs&amp;amp;list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab">3blue1brown - Essence of linear algebra&lt;/a> about linear algebra, vector, linear transformation, matrix multiplication.&lt;/p>
&lt;p>Now working on fastai and data blocks API.&lt;/p>
&lt;p>What&amp;rsquo;s the normalization imagenet_stats&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What&amp;rsquo;s BatchNorm2d&lt;/li>
&lt;li>What&amp;rsquo;s dropout&lt;/li>
&lt;/ul>
&lt;h2 id="2020-03-31">&lt;a href="https://yanael.io/days/ml/#2020-03-31">2020-03-31&lt;/a>&lt;/h2>
&lt;p>Working with Fastai library, and practice the data block API.&lt;/p>
&lt;p>I read some articles &lt;a href="https://machinelearningmastery.com/linear_algebra_for_machine_learning/">Basics of Linear Algebra for Machine Learning&lt;/a> super valuable, he advises the top-down approach and prevents mistakes of what beginners do. They learn math too early in the ML journey.&lt;/p>
&lt;p>ResNet solve the vanishing gradient&lt;/p>
&lt;p>Article: &lt;a href="https://towardsdatascience.com/deep-convolutional-neural-networks-ccf96f830178">Deep Convolutional Neural Networks&lt;/a>&lt;/p>
&lt;p>CNN: Convolutional Neural Network&lt;/p>
&lt;p>Question:&lt;/p>
&lt;ul>
&lt;li>What&amp;rsquo;s a convolution?&lt;br>
Convolution operation consists on passing a kernel over an input volume.&lt;br>
Used to capture features.&lt;/li>
&lt;/ul>
&lt;h2 id="2020-04-01">&lt;a href="https://yanael.io/days/ml/#2020-04-01">2020-04-01&lt;/a>&lt;/h2>
&lt;p>Want to work with a segmentation dataset, importing this COCO datasets &lt;a href="http://cocodataset.org/">http://cocodataset.org/&lt;/a>&lt;/p>
&lt;p>Train the model.&lt;/p>
&lt;p>Python division with two slashes to do integer division &lt;code>10//3 = 3&lt;/code>&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What&amp;rsquo;s a mask exactly?&lt;/li>
&lt;li>How to create a fallback in an image classification? If not detected go to the fallback case, should we implement that post classification based on the minimum score?&lt;/li>
&lt;li>What&amp;rsquo;s the segmentation used for? Advantage?&lt;/li>
&lt;li>How to evaluate the memory footprint to guess the batch size?&lt;/li>
&lt;/ul>
&lt;h2 id="2020-04-02">&lt;a href="https://yanael.io/days/ml/#2020-04-02">2020-04-02&lt;/a>&lt;/h2>
&lt;p>I continue to train on CamVid.&lt;/p>
&lt;p>Question:&lt;/p>
&lt;ul>
&lt;li>What unet is?&lt;/li>
&lt;/ul>
&lt;h2 id="2020-04-05">&lt;a href="https://yanael.io/days/ml/#2020-04-05">2020-04-05&lt;/a>&lt;/h2>
&lt;p>Working on segmentation, based on the camvid tiny dataset.&lt;/p>
&lt;p>I&amp;rsquo;m exploring the mask and the function to display it. It call an external library and the convert mode is used to display different color based on the value in the image. The value does not represent an RGB value.&lt;/p>
&lt;p>I check the min value and the max value in the tensor&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>torch&lt;span style="color:#f92672">.&lt;/span>min(mask&lt;span style="color:#f92672">.&lt;/span>data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>torch&lt;span style="color:#f92672">.&lt;/span>max(mask&lt;span style="color:#f92672">.&lt;/span>data)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I expect it should match the number of codes I have in my dataset.&lt;/p>
&lt;p>It will depend on the image, not on all the images we have all the things in the label.
I will check how many different value I have in my dataset instead min and max.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>len(np&lt;span style="color:#f92672">.&lt;/span>unique(mask&lt;span style="color:#f92672">.&lt;/span>data))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now it make sense, I can discover all the things I have in the images based on the mask code.&lt;/p>
&lt;p>I trained the model, still learning about the learning rate and the plot loss.&lt;/p>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>Train a model with one class only&lt;/li>
&lt;li>Prepare a small dataset with multi classes&lt;/li>
&lt;li>Train my model on the COCO datasets.&lt;/li>
&lt;/ul>
&lt;p>Starting fast.ai lesson 4&lt;/p>
&lt;p>NLP:
Legal Text classifier with univeral model fine tuning.&lt;/p>
&lt;p>&lt;a href="https://www.aclweb.org/anthology/P18-1031.pdf">Universal Language Model Fine-tuning for Text Classification (paper)&lt;/a>&lt;/p>
&lt;p>NLP use transfer learning, use pre trained Language model from wikipedia Wikitext.&lt;/p>
&lt;p>Language model → Specific language model → Classifier&lt;br>
Self supervised learning&lt;/p>
&lt;p>Collaborative filtering:&lt;br>
&lt;a href="https://en.wikipedia.org/wiki/Sparse_matrix">Sparse matrix&lt;/a> storage&lt;br>
Cold start problem, to solve use a metadata model&lt;/p>
&lt;p>Terms:&lt;br>
&lt;strong>Parameters/weights&lt;/strong> → Number inside the matrices&lt;br>
&lt;strong>Activations&lt;/strong> → Result of the calculation (Result of matrix multiply or activation function)&lt;br>
&lt;strong>Layers&lt;/strong> → Each step of the computation&lt;br>
&lt;strong>Input&lt;/strong> → Entry point&lt;br>
&lt;strong>Output&lt;/strong> → Result&lt;/p>
&lt;p>Common to have a sigmoid at the last layer, to have an output between 2 values&lt;/p>
&lt;p>Loss function compare the result with the last layer.&lt;/p>
&lt;h2 id="2020-04-06">&lt;a href="https://yanael.io/days/ml/#2020-04-06">2020-04-06&lt;/a>&lt;/h2>
&lt;p>Training on the head poses dataset.&lt;/p>
&lt;p>Data augmentation can help generate more data for the training set.&lt;/p>
&lt;h2 id="2020-04-08">&lt;a href="https://yanael.io/days/ml/#2020-04-08">2020-04-08&lt;/a>&lt;/h2>
&lt;p>Working with tabular data today.&lt;/p>
&lt;ul>
&lt;li>Continuous: Represents values without limits, like age.&lt;/li>
&lt;li>Categorical: Limited to a small set of possibilities.&lt;/li>
&lt;/ul>
&lt;p>For categorical data, we will use embeddings.&lt;/p>
&lt;p>A processor, similar to transformations in computer vision, will be used, but it&amp;rsquo;s applied beforehand.&lt;/p>
&lt;p>The validation set should be a contiguous group of items.&lt;/p>
&lt;h2 id="2020-04-10">&lt;a href="https://yanael.io/days/ml/#2020-04-10">2020-04-10&lt;/a>&lt;/h2>
&lt;p>Regarding Collaborative Learning, what is the difference between Embedding NN and Embedding Dot Bias?&lt;/p>
&lt;p>Will fastai keep the better parameters of the training when we change the learning rate?&lt;/p>
&lt;p>How are columns selected in CollabDataBunch?&lt;/p>
&lt;p>What is PCA?&lt;/p>
&lt;p>Calculate the loss with RMSE (Root Mean Squared Error).&lt;/p>
&lt;h2 id="2020-04-11">&lt;a href="https://yanael.io/days/ml/#2020-04-11">2020-04-11&lt;/a>&lt;/h2>
&lt;p>I&amp;rsquo;m watching a &lt;a href="https://www.youtube.com/watch?v=iaSUYvmCekI&amp;amp;list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI&amp;amp;index=3">course from MIT&lt;/a> about computer vision CNNs.&lt;/p>
&lt;p>Layers:&lt;/p>
&lt;ul>
&lt;li>Conv&lt;/li>
&lt;li>Relu&lt;/li>
&lt;li>MaxPooling: Takes the maximum value in the window&lt;/li>
&lt;/ul>
&lt;p>Apply layers to match the depth of the neural network.&lt;/p>
&lt;p>Convolution:&lt;/p>
&lt;ul>
&lt;li>Applying a window of weights&lt;/li>
&lt;li>Computing linear combinations&lt;/li>
&lt;li>Activating with a nonlinear function&lt;/li>
&lt;/ul>
&lt;p>Depth: h x w x d&lt;/p>
&lt;p>Create a feature map.&lt;/p>
&lt;p>Non-Linear Activation:&lt;/p>
&lt;ul>
&lt;li>Applying activation function: ReLU &lt;code>max(0,z)&lt;/code>. Values lower than zero are set to 0; values greater than 0 remain unchanged.&lt;/li>
&lt;/ul>
&lt;p>Pooling:&lt;/p>
&lt;ul>
&lt;li>Takes the maximum value of the patch, shrinking the image&lt;/li>
&lt;li>Patch&lt;/li>
&lt;/ul>
&lt;p>CNN:&lt;/p>
&lt;ul>
&lt;li>Feature Learning&lt;/li>
&lt;li>Classification&lt;/li>
&lt;/ul>
&lt;p>Tensorflow provides a &lt;a href="http://playground.tensorflow.org/">playground&lt;/a> tool.&lt;/p>
&lt;p>The playground is pretty nice; you can better understand the learning rate, see the impact of the activation function, and observe the effects of noise and batch size.&lt;/p>
&lt;p>&lt;a href="https://www.immersivelimit.com/tutorials/create-coco-annotations-from-scratch">Create a COCO dataset from scratch&lt;/a>&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What if we don&amp;rsquo;t include an activation layer like ReLU?&lt;/li>
&lt;li>What is Softmax?&lt;/li>
&lt;li>What is the &amp;lsquo;wd&amp;rsquo; parameter? Weight Decay is a hyperparameter, as explained in this &lt;a href="https://towardsdatascience.com/this-thing-called-weight-decay-a7cd4bcfccab">article&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>Train a segmentation model on the COCO dataset.&lt;/li>
&lt;li>Create a Yin &amp;amp; Yang model.&lt;/li>
&lt;/ul>
&lt;h2 id="2020-04-12">&lt;a href="https://yanael.io/days/ml/#2020-04-12">2020-04-12&lt;/a>&lt;/h2>
&lt;p>Continuing learning and training models.&lt;/p>
&lt;p>I&amp;rsquo;ve read an &lt;a href="https://towardsdatascience.com/10-new-things-i-learnt-from-fast-ai-v3-4d79c1f07e33">article that summarizes the fastai course&lt;/a>.&lt;/p>
&lt;p>Datasets:&lt;/p>
&lt;ul>
&lt;li>Train: Used to train the model.&lt;/li>
&lt;li>Validation: Provides an unbiased evaluation while tuning model hyperparameters.&lt;/li>
&lt;li>Test: Used when the model is fully trained.&lt;/li>
&lt;/ul>
&lt;p>In NLP, the first step is training a language model, which is the step of guessing the next word in a sentence.&lt;/p>
&lt;p>A language model has its own labels.&lt;/p>
&lt;p>Now we can create a classifier.&lt;/p>
&lt;p>MSE: Mean Squared Error.
Always non-negative.&lt;/p>
&lt;p>Article to understand and choose the last layer activation and loss function.&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What is regularization L1, L2?&lt;/li>
&lt;li>What is momentum?&lt;/li>
&lt;/ul>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>Train a model for NLP sentiment analysis.&lt;/li>
&lt;li>Recreate MSE function.&lt;/li>
&lt;/ul>
&lt;h2 id="2020-04-13">&lt;a href="https://yanael.io/days/ml/#2020-04-13">2020-04-13&lt;/a>&lt;/h2>
&lt;p>I&amp;rsquo;ve explored the batch size and tried to understand how it works. It&amp;rsquo;s related to PyTorch and involves loading data per batch to avoid loading everything into memory, I guess.&lt;/p>
&lt;p>I&amp;rsquo;ll start lesson 5.&lt;/p>
&lt;p>Fastai adds two layers at the end:&lt;/p>
&lt;ul>
&lt;li>Freeze: Freezes the previous layers.&lt;/li>
&lt;li>Split the layers into 2 groups with different learning rates.&lt;/li>
&lt;li>Discriminative learning rate.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>learn&lt;span style="color:#f92672">.&lt;/span>fit(n_epoch, learning_rate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Learning rate parameter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># All layers receive the same learning rate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1e-3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># The final layer receives the indicated learning rate. The other layers receive the number divided by 3.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>slice(&lt;span style="color:#ae81ff">1e-3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># The first layer receives the first value,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># All intermediate layers receive multiplicatively equal spreads,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># The last layer receives the second value.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>slice(&lt;span style="color:#ae81ff">1e-5&lt;/span>, &lt;span style="color:#ae81ff">1e-3&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add learning rate per group, not per layer.&lt;/p>
&lt;p>&lt;code>cnn_learner&lt;/code> has 3 layer groups by default.&lt;/p>
&lt;p>Pre-processing:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://hackernoon.com/what-is-one-hot-encoding-why-and-when-do-you-have-to-use-it-e3c6186d008f">One hot encoding&lt;/a> converts input to 0 or 1.&lt;/li>
&lt;li>Matrix product by a one-hot encoding matrix, similar to array lookup, is called embedding.&lt;/li>
&lt;li>&lt;code>y_range&lt;/code> makes the final activation function a sigmoid.&lt;/li>
&lt;li>RMSE^2 → MSE&lt;/li>
&lt;li>PCA: Principal Component Analysis&lt;/li>
&lt;li>&lt;code>parameters -= learning_rate * parameters.grad&lt;/code>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;em>Matrix multiplications followed by ReLUs, when stacked together, have this amazing mathematical property known as the universal approximation theorem. If you have large enough weight matrices and enough of them, they can solve any arbitrarily complex mathematical function to any arbitrarily high level of accuracy.&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>Fine-tuning: Based on a trained model, retrain the model to fit our use case.&lt;/p>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>Write a linear function.&lt;/li>
&lt;li>Calculate RMSE.&lt;/li>
&lt;/ul>
&lt;p>Questions:&lt;/p>
&lt;p>Why use square instead of absolute in the loss function?&lt;/p>
&lt;p>Okay, it’s called MAE, and it’s used when we don’t care about outliers.&lt;/p>
&lt;p>&lt;a href="https://towardsdatascience.com/understanding-the-3-most-common-loss-functions-for-machine-learning-regression-23e0ef3e14d3">Loss functions: MSE, MAE, Huber&lt;/a>&lt;/p>
&lt;p>Another loss function that exists is named Huber.&lt;/p>
&lt;h2 id="2020-04-15">&lt;a href="https://yanael.io/days/ml/#2020-04-15">2020-04-15&lt;/a>&lt;/h2>
&lt;p>I want to write the MSE, MAE, and RMSE functions.&lt;/p>
&lt;p>Clarifying the squaring and square rooting.&lt;/p>
&lt;p>Squared:&lt;/p>
&lt;p>$$
x^2
$$&lt;/p>
&lt;p>Square root:&lt;/p>
&lt;p>$$
\sqrt{x}
$$&lt;/p>
&lt;p>Here are the Python functions for MSE, RMSE, and MAE:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Mean Squared Error (MSE)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">mse&lt;/span>(target, prediction):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ((target &lt;span style="color:#f92672">-&lt;/span> prediction) &lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>mean()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Root Mean Squared Error (RMSE)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">rmse&lt;/span>(target, prediction):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> math&lt;span style="color:#f92672">.&lt;/span>sqrt(mse(target, prediction))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Mean Absolute Error (MAE)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">mae&lt;/span>(target, prediction):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> abs(target &lt;span style="color:#f92672">-&lt;/span> prediction)&lt;span style="color:#f92672">.&lt;/span>mean()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>These functions calculate the respective errors between the target values and the predictions.&lt;/p>
&lt;h2 id="2020-04-16">&lt;a href="https://yanael.io/days/ml/#2020-04-16">2020-04-16&lt;/a>&lt;/h2>
&lt;p>I&amp;rsquo;ll be focusing on writing a neural net from scratch.&lt;/p>
&lt;p>I have started to rewrite the SGD (Stochastic Gradient Descent) functions. I&amp;rsquo;m following this article: &lt;a href="https://www.charlesbordet.com/fr/gradient-descent/#et-les-maths-dans-tout-ca-">https://www.charlesbordet.com/fr/gradient-descent/#et-les-maths-dans-tout-ca-&lt;/a>. It&amp;rsquo;s well explained.&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What are affine functions?&lt;/li>
&lt;li>How do you calculate the derivative?&lt;/li>
&lt;/ul>
&lt;h2 id="2020-04-17">&lt;a href="https://yanael.io/days/ml/#2020-04-17">2020-04-17&lt;/a>&lt;/h2>
&lt;p>Google provides a course with a clear path and good explanations:&lt;/p>
&lt;p>&lt;a href="https://developers.google.com/machine-learning/crash-course/ml-intro?hl=en">Introduction to Machine Learning&lt;/a>&lt;/p>
&lt;h2 id="2020-04-18">&lt;a href="https://yanael.io/days/ml/#2020-04-18">2020-04-18&lt;/a>&lt;/h2>
&lt;p>Working with the basic implementation of the functions.&lt;/p>
&lt;p>&lt;a href="https://developers.google.com/machine-learning/glossary">Machine Learning Glossary&lt;/a>&lt;/p>
&lt;p>Weight Decay:&lt;/p>
&lt;p>We want a lot of parameters but less complexity.&lt;/p>
&lt;p>How to penalize complexity:&lt;/p>
&lt;p>Sum up the values of the parameters.&lt;/p>
&lt;p>Some parameters are negative and others positive, so we can sum the squares of the parameters.&lt;/p>
&lt;p>The problem with that is the number is too big, and the best loss would be to set all the parameters to zero.&lt;/p>
&lt;p>So, let&amp;rsquo;s multiply that with a number we choose. That number is called wd → weight decay.&lt;/p>
&lt;p>A good wd is 0.1; the default is 0.01.&lt;/p>
&lt;p>I have rewritten a matrix multiplication function.&lt;/p>
&lt;p>The gradient is like the delta between two values.&lt;/p>
&lt;p>The gradient of an array of values will be the number needed to reach the next one.&lt;/p>
&lt;p>From 1 to 1.5, the gradient will be 0.5.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>np&lt;span style="color:#f92672">.&lt;/span>gradient([&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1.5&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Output: array([0.5, 0.5])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Derivative:&lt;/p>
&lt;p>$$
\frac{d}{dx}
$$&lt;/p>
&lt;p>$$
f&amp;rsquo;
$$&lt;/p>
&lt;p>Notation of the Gradient of a function:&lt;/p>
&lt;p>$$
\vec \nabla f
$$&lt;/p>
&lt;p>To calculate the gradient, we are based on the previous weights.&lt;/p>
&lt;p>Based on the weight of the previous epoch minus the learning rate multiplied by the derivative of the loss function.&lt;/p>
&lt;p>$$
wt = w_{t-1} - lr \times \dfrac{dL}{dw_{t-1}}
$$&lt;/p>
&lt;p>dL → Loss&lt;/p>
&lt;p>$$
L(x,w) = mse(m(x,y), y) + wd \times \sum w^2
$$&lt;/p>
&lt;p>A gradient is a vector; a directional derivative is a scalar.&lt;/p>
&lt;p>Derivative based on the gradient gets the direction to choose to decrease the cost.&lt;/p>
&lt;p>An implementation of gradient descent in python: &lt;a href="https://gist.github.com/ajmaradiaga/118f55ef4999318d6640232a73a735bd">gradient_descent.py&lt;/a>&lt;/p>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>How to compute SGD on all the parameters?&lt;/li>
&lt;li>How to calculate the gradient of a tensor?&lt;/li>
&lt;/ul>
&lt;h2 id="2020-04-19">&lt;a href="https://yanael.io/days/ml/#2020-04-19">2020-04-19&lt;/a>&lt;/h2>
&lt;p>Discussion with Natan about Fastai and the multi-label training on the Planet dataset.&lt;/p>
&lt;p>&lt;code>lr_find()&lt;/code> restores the weights at the end of the exploration.&lt;/p>
&lt;p>The threshold should not impact the training, but what if we set the threshold to 1%? Should we get an accuracy of 100%?&lt;/p>
&lt;p>To know the loss function used, use &lt;code>learn.loss_func&lt;/code>.&lt;/p>
&lt;p>To launch the debugger in Jupyter, use &lt;code>%debug&lt;/code>.&lt;/p>
&lt;p>&lt;a href="https://pytorch.org/tutorials/beginner/nn_tutorial.html">Tutorial to implement a NN from scratch&lt;/a>.&lt;/p>
&lt;p>Logistic regression model → Neural net with one layer and no hidden layer.&lt;/p>
&lt;p>CrossEntropyLoss is used for problems where the loss can&amp;rsquo;t be calculated between elements.
If we predict 5 instead of 4, the error is the same as predicting 0 instead of 4.&lt;/p>
&lt;p>There&amp;rsquo;s no relation between the numbers; we can&amp;rsquo;t calculate the loss between 5 and 4.&lt;/p>
&lt;p>Gradient of&lt;/p>
&lt;p>$$
\frac{d\ (wd \times w^2)}{dw} = 2 \times wd \times w
$$&lt;/p>
&lt;p>where wd → constant, w → weights.&lt;/p>
&lt;p>➖ &lt;strong>Weight Decay:&lt;/strong> Subtracts some constant times the weights every time we do a batch.&lt;/p>
&lt;p>$$
wd \times w
$$&lt;/p>
&lt;p>➕ &lt;strong>L2 Regularization:&lt;/strong> Adds the square of the weights to the loss function.&lt;/p>
&lt;p>$$
wd \times w^2
$$&lt;/p>
&lt;p>Momentum:&lt;br>
Exponentially weighted moving average:&lt;/p>
&lt;p>$$
S_t = \beta \times g_t + (1 - \beta) \times S_{t-1}
$$&lt;/p>
&lt;p>where ( S_t ) is the step at time t, ( g_t ) is the gradient at time t, and ( \beta ) is the momentum coefficient.&lt;/p>
&lt;p>SGD with Momentum → Based on the current gradient plus the exponentially weighted moving average of the last few steps.&lt;br>
SGD Momentum is almost always set to 0.9.&lt;/p>
&lt;p>RMSPROP:&lt;br>
If the gradient is consistently very small and not volatile, make bigger jumps.&lt;/p>
&lt;p>ADAM:&lt;br>
Combines RMSPROP and Momentum.&lt;/p>
&lt;p>Cross-Entropy Loss:&lt;br>
Sum of the one-hot encoded variables times all the activations.&lt;/p>
&lt;p>Can be solved with an if statement:&lt;br>
if cat then log(cat_pred) else log(1 - cat_pred).&lt;/p>
&lt;p>Can be done by a lookup:&lt;br>
Look up the log of the activation for the correct answer.&lt;br>
Ensure the prediction sums up to one.&lt;br>
Using softmax in the last layer: All activations are greater than 0 and less than 1.&lt;/p>
&lt;p>For single-label multi-class classification, use softmax as the activation function, and cross-entropy as the loss function.&lt;/p>
&lt;p>Weight Decay, Dropout, and BatchNorm are regularization functions.&lt;/p>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>Implement NN from scratch.&lt;/li>
&lt;li>Search for accuracy threshold.&lt;/li>
&lt;li>Write nn.Linear.&lt;/li>
&lt;/ul>
&lt;p>Questions:&lt;/p>
&lt;ul>
&lt;li>What is momentum?&lt;/li>
&lt;li>Why do we square in weight decay? Why not just use the absolute value?&lt;/li>
&lt;li>What is Adam optimization?&lt;/li>
&lt;li>What are the intercept and slope in a linear model?&lt;/li>
&lt;/ul>
&lt;h2 id="2020-04-21">&lt;a href="https://yanael.io/days/ml/#2020-04-21">2020-04-21&lt;/a>&lt;/h2>
&lt;p>Refreshing my understanding of one-hot encoding and embedding.&lt;/p>
&lt;p>☝ Affine function → Linear function → Matrices Multiplication&lt;/p>
&lt;p>Embedding is the use of array lookup instead of using matrix multiply by one hot encoding matrix.&lt;/p>
&lt;h2 id="2020-04-22">&lt;a href="https://yanael.io/days/ml/#2020-04-22">2020-04-22&lt;/a>&lt;/h2>
&lt;p>Starting lesson 6 of fastai.&lt;/p>
&lt;p>&lt;a href="http://platform.ai">platform.ai&lt;/a> To classifier unlabeled images&lt;/p>
&lt;p>Add more detail about the date, the data are used as one hot embedding by the model.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>add_datepart(train, &lt;span style="color:#e6db74">&amp;#34;Date&amp;#34;&lt;/span>, drop&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2020-04-23">&lt;a href="https://yanael.io/days/ml/#2020-04-23">2020-04-23&lt;/a>&lt;/h2>
&lt;p>I&amp;rsquo;m working with a notebook that utilizes GPU processing.&lt;/p>
&lt;p>To switch to CPU processing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>defaults&lt;span style="color:#f92672">.&lt;/span>device &lt;span style="color:#f92672">=&lt;/span> torch&lt;span style="color:#f92672">.&lt;/span>device(&lt;span style="color:#e6db74">&amp;#39;cpu&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Fastai Preprocessing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>Categorify
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FillMissing
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>FillMissing&lt;/code> replaces missing values with the median.&lt;/li>
&lt;li>Handling missing values is important in a model.&lt;/li>
&lt;li>If cardinality isn&amp;rsquo;t too high, convert the feature into a categorical one.&lt;/li>
&lt;/ul>
&lt;p>Preventing overfitting with dropout:&lt;/p>
&lt;ul>
&lt;li>Implement dropout in both training and testing phases.&lt;/li>
&lt;li>Also consider using BatchNorm.&lt;/li>
&lt;/ul>
&lt;p>Tasks:&lt;/p>
&lt;ul>
&lt;li>Create a function for implementing dropout.&lt;/li>
&lt;/ul>
&lt;p>Note: When using dropout, it is typically applied during the training phase to prevent overfitting. During the test or evaluation phase, dropout is not used; instead, the full network is utilized.&lt;/p>
&lt;h2 id="2020-04-25">&lt;a href="https://yanael.io/days/ml/#2020-04-25">2020-04-25&lt;/a>&lt;/h2>
&lt;p>I&amp;rsquo;m continuing with Lesson 6.&lt;/p>
&lt;p>&lt;a href="http://setosa.io/ev/image-kernels">Image Kernels&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://medium.com/impactai/cnns-from-different-viewpoints-fab7f52d159c">CNNs from Different Viewpoints&lt;/a>&lt;/p>
&lt;p>Convolution involves multiplying pixel blocks with a kernel.&lt;/p>
&lt;p>A kernel can detect various features like top edges, left edges, etc.&lt;/p>
&lt;p>In the case of Stride 2 convolution, every other pixel is skipped.&lt;/p>
&lt;p>Average Pooling is another technique used.&lt;/p>
&lt;p>With Natan, we started a project focusing on NLP. Our goal is to process our conversations on WhatsApp or Messenger and detect the sentiments within them.&lt;/p>
&lt;p>I imported my WhatsApp messages and performed some cleanup.&lt;/p>
&lt;p>Now, I&amp;rsquo;ll focus on the first part of NLP. In Natural Language Processing, there are typically 3 parts:&lt;/p>
&lt;ol>
&lt;li>Language Model&lt;/li>
&lt;li>Specific Language Model&lt;/li>
&lt;li>Classifier&lt;/li>
&lt;/ol>
&lt;p>I will work on the Language Model, which will be based on Wikipedia content. Since we want to analyze conversations in French, the language model needs to be in French.&lt;/p>
&lt;p>The language model&amp;rsquo;s task is to predict the next word in a sentence.
There&amp;rsquo;s an existing Language Model created from Wikipedia: &lt;a href="https://github.com/piegu/language-models/blob/master/lm2-french.ipynb">https://github.com/piegu/language-models/blob/master/lm2-french.ipynb&lt;/a>&lt;/p>
&lt;p>In NLP, there are Bidirectional Language Models where predictions can be made both &lt;strong>backward&lt;/strong> and &lt;strong>forward&lt;/strong>.&lt;/p>
&lt;p>I&amp;rsquo;m figuring out how to load this model into Fastai. I have the weights and need to create a &lt;code>language_model_learner&lt;/code> with them. It seems I need the data - to predict the next word, the model needs something to refer to.&lt;/p>
&lt;p>The vocab appears to be included in the files, so I&amp;rsquo;m figuring out how to load the weights and vocab without needing the entire dataset, and still be able to use &lt;code>learn.predict&lt;/code>. I might need a corpus; initially, I&amp;rsquo;ll try using the one from Wikipedia.&lt;/p>
&lt;h2 id="2020-04-26">&lt;a href="https://yanael.io/days/ml/#2020-04-26">2020-04-26&lt;/a>&lt;/h2>
&lt;p>Continuing with the NLP project, I&amp;rsquo;m researching how NLP is implemented in Fastai, aiming to customize some parts of the workflow with our custom data.&lt;/p>
&lt;p>Fastai discusses MultiFiT for text classification, a method based on ULMFiT.&lt;/p>
&lt;p>&lt;a href="https://nlp.fast.ai/">https://nlp.fast.ai/&lt;/a>&lt;/p>
&lt;p>For our NLP project, we scraped a French website for cinema reviews.&lt;/p>
&lt;h2 id="2020-04-29">&lt;a href="https://yanael.io/days/ml/#2020-04-29">2020-04-29&lt;/a>&lt;/h2>
&lt;p>I continue working on our NLP project. There was an issue with the data at some point; I&amp;rsquo;ll check why and try to fix the problem I&amp;rsquo;m encountering with the training of the language model.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://arxiv.org/abs/1611.01576">QRNN: Quasi-Recurrent Neural Networks&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="2020-04-30">&lt;a href="https://yanael.io/days/ml/#2020-04-30">2020-04-30&lt;/a>&lt;/h2>
&lt;p>I&amp;rsquo;m exploring QRNNs and trying to figure out why they&amp;rsquo;re not working on the workstation.&lt;/p>
&lt;h2 id="next">NeXT&lt;/h2>
&lt;p>To follow the upcoming days:&lt;/p>
&lt;p>&lt;form id="form-subscribe"
action="https://formspree.io/f/mleopdlv"
method="POST"
>
&lt;label>Email:&lt;/label>
&lt;input type="email" name="email" />
&lt;button id="form-subscribe-button">Subscribe&lt;/button>
&lt;p id="form-subscribe-status">&lt;/p>
&lt;/form>
&lt;script>
window.addEventListener("DOMContentLoaded",function(){var e=document.getElementById("form-subscribe"),n=document.getElementById("form-subscribe-button"),t=document.getElementById("form-subscribe-status");function s(){e.reset(),n.style="display: none ",t.innerHTML="Thanks!"}function o(){t.innerHTML="Oops! There was a problem."}e.addEventListener("submit",function(t){t.preventDefault();var n=new FormData(e);ajax(e.method,e.action,n,s,o)})});function ajax(e,t,n,s,o){var i=new XMLHttpRequest;i.open(e,t),i.setRequestHeader("Accept","application/json"),i.onreadystatechange=function(){if(i.readyState!==XMLHttpRequest.DONE)return;i.status===200?s(i.response,i.responseType):o(i.status,i.response,i.responseType)},i.send(n)}
&lt;/script>
&lt;/p></description></item><item><title>Application vs infrastructure level</title><link>https://yanael.io/articles/application-vs-infrastructure-level/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://yanael.io/articles/application-vs-infrastructure-level/</guid><description>&lt;p>&lt;em>TL;DR: Choosing at which level between application or infrastructure you will act is an early and fundamental decision for your product, it needs to be carefully decided because it will impact the business broadly.&lt;/em>&lt;/p>
&lt;h2 id="saas">SaaS&lt;/h2>
&lt;p>Software as a Service is the approach that lets you &lt;strong>build the way you want&lt;/strong> without worrying about the support of multi-platforms.&lt;/p>
&lt;p>Technical compatibility appears in the integration part but not on the design decisions made inside the product. You can choose your language, stack, structure, practices, to make your service run.&lt;/p>
&lt;p>In short: you can &lt;strong>focus on the business needs&lt;/strong>, not on the requirements due to the technical debt of your clients.&lt;/p>
&lt;h2 id="serve-or-distribute">Serve or Distribute&lt;/h2>
&lt;p>Software as a Service implies to serve your service, it can then be called via a network and/or the Internet. Certain services are accessible through a web interface others will have an API to access it. In this pattern, the service needs to be online.&lt;/p>
&lt;p>But there is a different approach to provide your software: &lt;strong>bundling and distributing it&lt;/strong>. Like the current application model on your phone and the famous AppStore. Your application is prepared, bundled, and sent to the store where people can download it and use it directly on their phones. This model allows the offline mode. Some challenges will hit when an update has to be done. Now it only relies on the user if they did or not the update. You can &lt;strong>combine the two models to enable your full product potential.&lt;/strong>&lt;/p>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>The way you provide your software can have an impact on the overall architecture. If you choose to have an online service where users can connect to it and use your product directly, you can design your service as one product that can &lt;strong>support multiple users&lt;/strong>, or a product that can &lt;strong>support one user&lt;/strong> but you start multiple instances of your product to serve more clients.&lt;/p>
&lt;p>A simple representation of the architecture:&lt;/p>
&lt;p>&lt;em>Multi-tenancy, multi-client product:&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code>- Product
- Client 1
- User 1
- User n
- Client 2
- User 1
- User n
- Client n
- ...
&lt;/code>&lt;/pre>&lt;p>&lt;em>&lt;em>Multi-instance, single client product:&lt;/em>&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code>- Product: Instance for client 1
- User 1
- User n
- Product: Instance for client 2
- User 1
- User n
- Product: Instance for client n
...
&lt;/code>&lt;/pre>&lt;p>These two models of architecture imply a lot of differences under the hood and come with their advantages and constraints. It has an impact at a different level.&lt;/p>
&lt;p>The first approach manages the &lt;strong>multi-tenant at an application level&lt;/strong>, the second one handles the &lt;strong>multi-tenant at an infrastructure level&lt;/strong>.&lt;/p>
&lt;p>This has an impact at different levels of the stack:&lt;/p>
&lt;p>&lt;em>Levels:&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code>+-------------+
| Product | &amp;lt;- Application level
|-------------|
| Instance | &amp;lt;- Infrastructure level
+-------------+
&lt;/code>&lt;/pre>&lt;p>If you want to handle multi-tenants at an application level, you have to build the &lt;strong>permissions system into the application itself&lt;/strong>, define what a user can do and access. The limit and boundaries live inside the application.&lt;/p>
&lt;p>At an infrastructure level, the application is not touched and the boundaries between users are made into the infrastructure configuration, like a new server or networking settings.&lt;/p>
&lt;p>Acting at a different level has an impact on the business itself, the resources allocated will be different, and the teams will require a different skillset. At an &lt;strong>application level, Software Engineers&lt;/strong> are more involved, and at an &lt;strong>infrastructure level, DevOps&lt;/strong> will be the main actors.&lt;/p>
&lt;p>As well, designing your product at an infrastructure level can allow flexibility in terms of distribution. Your product can be instanced in another place on another server. But with this approach, some constraints exist. The &lt;strong>communication between clients will be more complex&lt;/strong>. It can be an advantage to keep your client data separated but features that federate data and allow interaction can be more complex to build.&lt;/p>
&lt;p>Regarding data storage, at an application level, you can create one central database where all the tenants&amp;rsquo; data is stored. The separation can be made into the database with different users, tables and schemas.&lt;/p>
&lt;p>At an infrastructure level, you have to deploy a new database per client and manage this database independently from the other DBs. So the data is well separated but it will not allow you to do cross tenant queries. If you want to aggregate data from every client you have to run a query on each DB. Also, sharing common data requires a different approach: instead of using one table and allowing all the users to query it, the table needs to be available in another common DB or duplicated into each DB.&lt;/p>
&lt;h3 id="deployment-of-a-new-version">Deployment of a new version&lt;/h3>
&lt;p>When you work at an application level, all the clients can get &lt;strong>access to the latest version&lt;/strong> of your product as soon as you release it.&lt;/p>
&lt;p>At an infrastructure level, releasing a new version means &lt;strong>deploying&lt;/strong> a new version for each client &lt;strong>independently&lt;/strong>.&lt;/p>
&lt;p>This question between application level and infrastructure level is becoming more obvious when you have to work &lt;strong>on-premise&lt;/strong>. Deploying an application on the client infrastructure directly brings new challenges and if you have built a multi-tenant application it will not make sense to deploy that application on the client infrastructure. Indeed, you want to distribute only one instance of the application to the client and &lt;strong>not a system to manage multiple instances of the application&lt;/strong>.&lt;/p>
&lt;p>With that in mind, this kind of distribution will impact the design of the application.&lt;/p>
&lt;p>Designing an application to be able to &lt;strong>run either as SaaS or on-premise&lt;/strong> requires a different architecture and comes with new challenges to solve.&lt;/p>
&lt;p>If you want to distribute the &lt;strong>same product to multiple clients&lt;/strong>, the challenges you have to solve are:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Version management:&lt;/strong> if you update the software, how can you distribute the updates across the different instances?&lt;/li>
&lt;li>&lt;strong>Monitoring:&lt;/strong> how do you monitor multiple applications and aggregate the status of the service?&lt;/li>
&lt;li>&lt;strong>Resources:&lt;/strong> each instance requires its own resources and has to be managed independently.&lt;/li>
&lt;li>&lt;strong>Infrastructure constraints:&lt;/strong> where you deploy your application can also have an impact on its design. Indeed, if you deploy on a certain cloud provider some features/tools may be implemented differently or may not be accessible at all.&lt;/li>
&lt;/ul>
&lt;p>Standardization can avoid complex management. Having a &lt;strong>replica instead of a custom version&lt;/strong> of your product per client will help.&lt;/p>
&lt;p>“Cloud lock” can be mitigated by containers, open-source, and avoiding cloud-native services.&lt;/p>
&lt;h2 id="distribution-isnt-integration">Distribution isn’t integration&lt;/h2>
&lt;p>After having built the software you want to distribute. Above we described two different ways to distribute it: SaaS or Bundle.&lt;/p>
&lt;p>Now how do you make your software &lt;strong>interact with the client system&lt;/strong>? This is the role of &lt;strong>integration&lt;/strong>. It does not impact your internal system but only the I/O of it. You can create many integrations to enable different use cases.&lt;/p>
&lt;p>&lt;strong>e.g.:&lt;/strong> API REST, S3 connector, Kafka, or even ipc, etc&lt;/p>
&lt;p>The integration part describes how your software will connect to the rest of the system. An integration can be different based on the way you choose to distribute the software. This step deals with the design and the architecture.&lt;/p>
&lt;h2 id="impacts">Impacts&lt;/h2>
&lt;p>The impacts of software distribution on the architecture:&lt;/p>
&lt;h3 id="cost">Cost&lt;/h3>
&lt;p>By building a service on your infrastructure, you have to manage the cost: cutting the bills becomes a real thing, resources usage is a concern. So you can &lt;strong>combine services, use shared caching, &amp;hellip;&lt;/strong> This kind of cost reduction can be made with less friction when you manage the infrastructure.&lt;/p>
&lt;h3 id="move-fast">Move fast&lt;/h3>
&lt;p>Delegating tasks and adding &lt;strong>vendors&lt;/strong> in the loop decrease the flexibility you have and create &lt;strong>bottlenecks&lt;/strong> that can lead to slow iterations. If your product is deployed on-premise you will have to deal with the tech team of your client to make any fix or update.&lt;/p>
&lt;h3 id="security">Security&lt;/h3>
&lt;p>Security becomes a thing when you deploy on-premise, as you rely on the security of your customer infrastructure. But your tool can also bring security holes in their system. Miss-configuration due to a &lt;strong>lack of knowledge&lt;/strong> of the targeted system becomes a real weakness. You have to take care of the security of the software you built but the infrastructure security will rely mostly on the customer.&lt;/p>
&lt;h3 id="intellectual-property">Intellectual Property&lt;/h3>
&lt;p>By the time you distribute the binary or the source code, you can’t protect yourself anymore against someone stealing your work. Only licenses, contracts, and laws can protect you against that. But the &lt;strong>technical barriers are almost gone&lt;/strong>.&lt;/p>
&lt;p>Distributing your service through an API allows you to manage who can access it and they are only allowed to execute it, the intellectual property can be more protected with that form of distribution.&lt;/p>
&lt;h2 id="in-the-wild">In the wild&lt;/h2>
&lt;p>If you look at &lt;a href="http://sentry.io">Sentry.io&lt;/a> this tool is a perfect example, they chose to entirely &lt;a href="https://github.com/getsentry/sentry">open source&lt;/a> the product and they also provide Sentry as a SaaS. The product manages one or multi-organizations. To manage multiple organizations as they do for their SaaS, they have implemented &lt;a href="https://blog.sentry.io/how-to-build-saas-application/">multi-tenancy &amp;amp; tenant isolation&lt;/a>.&lt;/p>
&lt;p>GitLab has the same pattern, they have an open-source version and they have a cloud service you can directly subscribe to, and they manage the instance for you. The open-source version is only for one organization; if you want to have &lt;strong>multiple organizations you need to start new instances&lt;/strong>. So this is handled at an infrastructure level.&lt;/p>
&lt;h2 id="so-what">So what&lt;/h2>
&lt;p>&lt;em>Multi tenancy:&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code>+--------------------------------+
| Tenant 1 | Tenant 2 | Tenant 3 |
+--------------------------------+
| App |
+--------------------------------+
&lt;/code>&lt;/pre>&lt;p>or &lt;em>Single tenant:&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code>+--------------------------------+
| Tenant 1 | Tenant 2 | Tenant 3 |
+----------|----------|----------+
| App | App | App |
+--------------------------------+
&lt;/code>&lt;/pre>&lt;p>Build at an application level or at an infrastructure level requires different skills and has an impact on the team resource. This choice will have an &lt;strong>effect down the line and need to be aligned&lt;/strong> with the business objectives.
&lt;br>
&lt;br>
&lt;br>
&lt;a href="https://twitter.com/YanaelBarbier">Discuss on Twitter&lt;/a>&lt;/p></description></item><item><title>Subscribe</title><link>https://yanael.io/subscribe/</link><pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate><guid>https://yanael.io/subscribe/</guid><description>&lt;p>To receive my fresh articles and day-to-day posts:&lt;/p>
&lt;p>RSS: &lt;a href="https://yanael.io/rss.xml
">https://yanael.io/rss.xml
&lt;/a>&lt;/p>
&lt;p>&lt;form id="form-subscribe"
action="https://formspree.io/f/mleopdlv"
method="POST"
>
&lt;label>Email:&lt;/label>
&lt;input type="email" name="email" />
&lt;button id="form-subscribe-button">Subscribe&lt;/button>
&lt;p id="form-subscribe-status">&lt;/p>
&lt;/form>
&lt;script>
window.addEventListener("DOMContentLoaded",function(){var e=document.getElementById("form-subscribe"),n=document.getElementById("form-subscribe-button"),t=document.getElementById("form-subscribe-status");function s(){e.reset(),n.style="display: none ",t.innerHTML="Thanks!"}function o(){t.innerHTML="Oops! There was a problem."}e.addEventListener("submit",function(t){t.preventDefault();var n=new FormData(e);ajax(e.method,e.action,n,s,o)})});function ajax(e,t,n,s,o){var i=new XMLHttpRequest;i.open(e,t),i.setRequestHeader("Accept","application/json"),i.onreadystatechange=function(){if(i.readyState!==XMLHttpRequest.DONE)return;i.status===200?s(i.response,i.responseType):o(i.status,i.response,i.responseType)},i.send(n)}
&lt;/script>
&lt;/p></description></item><item><title>Init</title><link>https://yanael.io/articles/init/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://yanael.io/articles/init/</guid><description>&lt;p>Everything starts with an init.&lt;/p>
&lt;p>It&amp;rsquo;s a perfect time to release my new project, Moonshot Engineer, a place where I can share my learnings and my views mostly about tech, startups, software, and data.&lt;/p>
&lt;h2 id="root-cause">Root cause&lt;/h2>
&lt;p>One thing I love the most is understanding how people work in their day to day basis. Jump in or starting a new project require to understand how the project works, what’s the purpose and goals of it, aligned with the philosophy behind it. From the outside we can see the inputs and the outputs, but the pipe between is most of the time hidden. Focus on the pipe, what’s inside, how things are made behind the hood? What were the decisions, the different proposals, the challenges, the methods, the tools, and why these choices were made?&lt;/p>
&lt;p>All of these questions are hard to answer when you don&amp;rsquo;t work with the team or in the company itself, and that&amp;rsquo;s what I want to discover, the unshared stories. One great thing is that, in the software community, open source is almost the root culture and, that can help us to explore and understand how things are made! So it will be one of the most used channels to try to understand stories.&lt;/p>
&lt;h2 id="behind-the-rocket">Behind the rocket&lt;/h2>
&lt;p>We have seen with the last SpaceX launch people interested in the software and the hardware that support this kind of technology. Some people tried to discover how things are made by aggregating conversations from engineers to understand how they implemented things. And discovering new technics and methods and maybe try to solve their problems with a different approach.&lt;/p>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;p>That’s the question, how the implementation looks like? Two different projects can produce the same output but what’s the difference between those two, how they are built. At some point in a project, we face new challenges, and sometimes these challenges were already tackled by others and we can save time to directly ask them what works and what doesn’t. We don’t have to delegate or skip steps because it’s what makes us learn but avoiding getting stuck and having another point of view, that the thing. The actual learning will come when we start the implementation.&lt;/p>
&lt;h2 id="changelog">Changelog&lt;/h2>
&lt;p>We start with assumptions and lots of changes happen during the journey getting only the final state doesn’t lighten the full story. So logging the journey can help to understand the starting point and the path followed to reach the landing point.&lt;/p>
&lt;p>This place is where I will share my logs.&lt;/p>
&lt;h2 id="next-step">NeXT STEP&lt;/h2>
&lt;p>Let&amp;rsquo;s dig in!&lt;/p></description></item><item><title>About</title><link>https://yanael.io/about/</link><pubDate>Sun, 24 May 2020 15:35:55 +0000</pubDate><guid>https://yanael.io/about/</guid><description>&lt;p>Hey, I’m Yanael, never away from a keyboard, learning, designing and building software. Currently working as a Software Engineer for a &lt;a href="https://sprout.ai">startup&lt;/a> in London, I’m handling data in my day to day basis. Formerly in Paris where I studied at &lt;a href="http://42.fr">42&lt;/a> and had different company experiences along the way.&lt;/p>
&lt;p>Startups and Silicon Valley enthusiast, I spent some time in the Bay Area, drinking Blue Bottle’s and owning a Patagonia jacket.&lt;/p>
&lt;p>I like to chat with people when it starts with:&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>I don’t shave, I drink coffee and The Art of UNIX Programming is on my nightstand.&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>If you want to know more: &lt;a href="https://yanael.io/networks">Ping me!&lt;/a>&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item></channel></rss>